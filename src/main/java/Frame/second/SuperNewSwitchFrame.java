/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame.second;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;

import Util.*;
/*import util.util.FlowentryClass;
import util.util.FlowentryUtil;
import util.util.LinkClass;
import util.util.LinkOfSwitch;
import util.util.PortClass;
import util.util.PortSwitch;
import util.util.StatsPort;
import util.util.StatsPortClass;*/

/**
 *  该类显示的时点击主界面交换机图标时的显示结果
 * @author Admin
 */
public class SuperNewSwitchFrame extends javax.swing.JFrame {
	
	private String switchName;
	private List<String> statPortList;
	private List<PortClass> portClassList;
	private List<LinkClass> linkClassList;
	private List<FlowentryClass> flowentryClassList;
	private FlowTableUtil ftu = new FlowTableUtil();
	private StatsPort sp = new StatsPort();
	private LinkOfSwitch los = new LinkOfSwitch();
	private FlowentryUtil fu ;
	private Object[][] stats;
	private Object[][] portSwitches;
	private Object[][] linkSwitches;
	private Object[][] flowentry;
	
    /**
     * Creates new form NewJFrame
     */
    public SuperNewSwitchFrame(String s) {
    	this.switchName = s;
    	fu = new FlowentryUtil(ftu.readJtl(switchName));/*ftu.readJtl(switchName)此函数作用是截取含有
    	交换机信息的字符串  fu = new FlowentryUtil流表项分离类 */
        initComponents();
        //return s;
    }



    //初始化交换机流表项结果，生成元素为FlowentryClass类型List
    public void initObjectFlowentry() {
    	flowentryClassList = new ArrayList<FlowentryClass>();
    	flowentryClassList = fu.getClassList();//得到流表项，流表项字符串类
    	System.out.println(flowentryClassList.size());
    	flowentry = new Object[flowentryClassList.size()][5];
    	for(int i=0;i<flowentryClassList.size();i++) {
/*    		flowentry[i][0] = 
    				flowentryClassList.
    				get(i).
    				getCookie();*/
    		flowentry[i][0] = 0+"";
    		flowentry[i][1] = flowentryClassList.get(i).getPriority();
    		flowentry[i][2] = flowentryClassList.get(i).getByte_count();
    		flowentry[i][3] = flowentryClassList.get(i).getMatch()+"}";
    		flowentry[i][4] = flowentryClassList.get(i).getActions();
    	}
    }
    
    
    
    //读取拓扑链接结果，生成LinkClass列表。
    public void initObjectLinkClass() {
    	linkClassList = new ArrayList<>();
    	//修改switchName成十进制
//    	long z;
//    	z = Long.parseLong(switchName,16);
//    	switchName = Long.toString(z);
//    	System.err.println(switchName);

    	linkClassList = los.getLinkClassList(los.getStringList(los.readJtl(switchName)));
    	linkSwitches = new Object[linkClassList.size()][3];
    	for(int i=0;i<linkClassList.size();i++) {
    		linkSwitches[i][0] = linkClassList.get(i).getSrcPort();
    		linkSwitches[i][1] = linkClassList.get(i).getDstPort();
    		linkSwitches[i][2] = linkClassList.get(i).getDstSwitch();
    	}
    }
    
    //读取端口统计结果，生成StatsPortClass列表。
    public void initObjectStats() {
    	String res = sp.readJtl(switchName);	
    	System.out.println("输出状态信息");
    	
		res = sp.modifyString(res);
		List<StatsPortClass> spcList = new ArrayList<StatsPortClass>();
		statPortList =sp.getList(res);

		for(String tem:statPortList) {
			StatsPortClass spc ;
			if(tem.contains("LOCAL")){
				spc = new StatsPortClass(tem,true);
			}
			else {
				 spc = new StatsPortClass(tem);
			}
			//spc.print();
			spcList.add(spc);
		}
		stats = new Object[spcList.size()][7];
		for(int i=0;i<stats.length;i++) {
			stats[i][0] = spcList.get(i).getPort();
			stats[i][1] = spcList.get(i).getRxBytes();
			stats[i][2] = spcList.get(i).getTxBytes();
			stats[i][3] = spcList.get(i).getRxPackets();
			stats[i][4] = spcList.get(i).getTxPackets();
			stats[i][5] = spcList.get(i).getRxDropped();
			stats[i][6] = spcList.get(i).getTxDropped();
		}
    }
    
    //读取端口信息的统计结果，生成PortClass类型的List
    public void initObjectPortSwitches() {
    	String res = PortSwitch.readJtl(switchName);
    	portClassList = new ArrayList<PortClass>();
    	portClassList = PortSwitch.getPortSwitchList(res); 	
    	portSwitches = new Object[portClassList.size()][3];
    	for(int i=0;i<portClassList.size();i++) {
    		portClassList.get(i).print();
    	}
    	for(int i=0;i<portClassList.size();i++) {
    		portSwitches[i][0] = portClassList.get(i).getName();
    		portSwitches[i][1] =portClassList.get(i).getPortNo();
    		portSwitches[i][2] = portClassList.get(i).getAddr();
    	}
    }
    
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	initObjectFlowentry();
   	initObjectLinkClass();
    	initObjectStats();
    	initObjectPortSwitches();

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("交换机");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
        		linkSwitches,
            new String [] {
                "源端口", "目的端口", "目的交换机"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 51, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("链路", jPanel7);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
        		portSwitches,
            new String [] {
                "端口名", "端口号", "MAC地址"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 51, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("端口", jPanel8);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        jTabbedPane2.addTab("属性", jPanel4);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
        		stats,
            new String [] {
                "端口号", "接收字节", "发送字节", "收包", "发包", "接收丢包", "发送丢包"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 80, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("状态", jPanel5);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            flowentry,
            new String [] {
            	    "流表号", "优先级", "计数器", "匹配域", "动作集"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 54, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("流表项", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
/*    public static void main(String args[]) {
         Set the Nimbus look and feel 
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
         If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SwitchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SwitchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SwitchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SwitchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

         Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SuperNewSwitchFrame().setVisible(true);
                
            }
        });
        
        
    }*/
    
    
    
    

    // Variables declaration - do not modify                     
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    // End of variables declaration                   
}
